pipeline:
  identifier: Build_shekharmvb_python_pipeline_samples_1728158752107
  name: Build python-pipeline-samples
  orgIdentifier: default
  projectIdentifier: pythondemo
  properties:
    ci:
      codebase:
        build: <+input>
        connectorRef: account.Github_OAuth_1685675568650
        repoName: shekharmvb/python-pipeline-samples
  stages:
    - stage:
        identifier: build
        name: build
        spec:
          caching:
            enabled: true
          cloneCodebase: true
          execution:
            steps:
              - step:
                  identifier: runlinter
                  name: run linter
                  spec:
                    command: |-
                      pip install flake8
                      flake8 .
                  timeout: ""
                  type: Run
              - step:
                  identifier: setupvirtualenvironment
                  name: setup virtual environment
                  spec:
                    command: |-
                      python3 -m venv .venv
                      . .venv/bin/activate
                      python3 -m pip install -r requirements.txt
                      python3 -m pip install -e .
                  timeout: ""
                  type: Run
              - step:
                  type: Run
                  name: Run_3
                  identifier: Run_3
                  spec:
                    connectorRef: account.harnessImage
                    image: pyhon:3.10.6-alpine
                    shell: Sh
                    command: python -m compileall ./
                  description: code compile
              - step:
                  type: Run
                  name: create docker file
                  identifier: create_docker_file
                  spec:
                    connectorRef: account.harnessImage
                    image: alpine
                    shell: Sh
                    command: |-
                      touch pythondockerfile
                      cat > pythondockerfile <<- EOM
                      FROM python:3.10.6-alpine
                      WORKDIR /python-pipeline-samples
                      ADD . /python-pipeline-samples
                      RUN pip install -r requirements.txt
                      CMD ["python" , "app.py"]
                      EOM
                      cat pythondockerfile
              - step:
                  identifier: dockerbuild
                  name: docker_build
                  spec:
                    connectorRef: <+input>
                    repo: 04071987/harness
                    tags:
                      - latest
                    caching: true
                    dockerfile: pythondockerfile
                  timeout: ""
                  type: BuildAndPushDockerRegistry
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
        type: CI
        description: ""
    - stage:
        name: integration-test
        identifier: integrationtest
        description: ""
        type: CI
        spec:
          cloneCodebase: false
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: Background
                  name: python server
                  identifier: python_server
                  spec:
                    connectorRef: account.harnessImage
                    image: 04071987/harness
                    shell: Sh
                    command: python3 /python-pipeline-samples/app.py
              - step:
                  type: Run
                  name: test connection
                  identifier: test_connection
                  spec:
                    connectorRef: account.harnessImage
                    image: curlimage/curl:7.73.0
                    shell: Sh
                    command: curl localhost:5000
